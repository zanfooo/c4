#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>

int main() {
    int f1, f2;
    int status;

    // Creazione primo figlio F1
    f1 = fork();
    if (f1 < 0) {
        perror("Errore nella fork di F1");
        exit(1);
    }
    if (f1 == 0) {
        // Processo figlio F1
        printf("F1: mio PID=%d, mio padre P ha PID=%d\n", getpid(), getppid());
        sleep(2);
        exit(2);
    }

    // Creazione secondo figlio F2
    f2 = fork();
    if (f2 < 0) {
        perror("Errore nella fork di F2");
        exit(1);
    }
    if (f2 == 0) {
        // Processo figlio F2
        printf("F2: mio PID=%d, mio padre P ha PID=%d\n", getpid(), getppid());
        sleep(4);
        exit(4);
    }

    // Processo padre
    printf("P: mio PID=%d, mio figlio F1 ha PID=%d\n", getpid(), f1);
    printf("P: mio PID=%d, mio figlio F2 ha PID=%d\n", getpid(), f2);

    // Attende la terminazione di F2 (quello che dorme di piÃ¹)
    waitpid(f2, &status, 0);
    if (WIFEXITED(status)) {
        printf("P: Il figlio F2 ha dormito %d secondi\n", WEXITSTATUS(status));
    }

    return 0;
}
